<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"></head><body>
<script type="text/javascript">
    (function(){

        var canUseLocalStore = (typeof localStorage !== 'object' ? false : true);

        //allowed domains
        var whitelist = [
            '24.hu', '50plusz.hu', 'babaszoba.hu',
            'cafeblog.hu', 'citromail.hu', 'cosmopolitan.hu',
            'ellemagazin.hu', 'eoldal.hu', 'foglaljorvost.hu',
            'hazipatika.com', 'hirstart.hu', 'kozelben.hu',
            'kremmania.hu', 'lap.hu', 'lapklub.hu',
            'marieclaire.hu', 'ng.hu', 'nlcafe.hu',
            'sorhat.hu', 'startapro.hu', 'startlap.hu',
            'startlapjatekok.hu', 'startlapkupon.hu', 'storyonline.hu',
            'terkep24.hu', 'vezess.hu', 'wellnesscafe.hu'
        ];

        function verifyOrigin(origin) {
            var originParts = origin.replace(/^http(s)?:\/\//ig, '').split('.'),
                    originPartsLength = originParts.length,
                    returnVal = false;

            if (whitelist.indexOf(originParts[originPartsLength-2] + '.' + originParts[originPartsLength-1]) != -1) {
                returnVal = true;
            }

            return returnVal;
        }

        function handleRequest(event) {
            if (verifyOrigin(event.origin)){
                var data = JSON.parse(event.data);
                if (typeof data.val !== 'undefined') {
                    /* got value, doing store */
                    dataSet(data.key, data.val);
                    event.source.postMessage(JSON.stringify({id: data.id, key:data.key, value:'OK', type:'set'}), event.origin);
                } else {
                    /* no value, doing get */
                    var value = dataGet(data.key);
                    /* send back data */
                    event.source.postMessage(JSON.stringify({id:data.id, key:data.key, value:value, type:'get'}), event.origin);
                }
            }
        }

        function dataSet(key, value) {
            if (canUseLocalStore === true) {
                localStorage.setItem(key, value);
            } else {
                setCookie(key, value);
            }
        }

        function dataGet(key) {
            var returnVal = null;
            if (canUseLocalStore === true) {
                returnVal = localStorage.getItem(key);
            } else {
                returnVal = getCookie(key);
            }
            return returnVal;
        }

        function setCookie(cname, cvalue) {
            var d = new Date();
            d.setTime(d.getTime() + (this.segmentValid*1000));
            var expires = "expires="+ d.toUTCString();
            document.cookie = cname + "=" + cvalue + "; " + expires;
        }

        function getCookie(cname) {
            var name = cname + "=";
            var ca = document.cookie.split(';');
            for(var i = 0; i <ca.length; i++) {
                var c = ca[i];
                while (c.charAt(0)==' ') {
                    c = c.substring(1);
                }
                if (c.indexOf(name) == 0) {
                    return c.substring(name.length,c.length);
                }
            }
            return null;
        }

        if(window.addEventListener) {
            window.addEventListener("message", handleRequest, false);
        } else if (window.attachEvent) {
            window.attachEvent("onmessage", handleRequest);
        }
    })();
</script>

</body></html>